const program = require("commander");
const fs = require("fs");
const changeCase = require("change-case");
const pluralize = require("pluralize");
const ora = require("ora");
const spinner = new ora({
  text: "Creating your module..",
  spinner: process.argv[2]
});

async function createController(newModuleBaseDir, lowerCaseName, upperCaseName, urlName, sentenceCaseName) {
  await fs.mkdirSync(newModuleBaseDir + "/controllers");
  let controllerFileData =
    "";
  controllerFileData = new String(new Buffer(controllerFileData, "base64"));
  controllerFileData = controllerFileData.split("lowercase_name_plural").join(pluralize(lowerCaseName));
  controllerFileData = controllerFileData.split("uppercase_name_plural").join(pluralize(upperCaseName));
  controllerFileData = controllerFileData.split("sentececase_name_plural").join(pluralize(sentenceCaseName));
  controllerFileData = controllerFileData.split("lowercase_name").join(lowerCaseName);
  controllerFileData = controllerFileData.split("uppercase_name").join(upperCaseName);
  controllerFileData = controllerFileData.split("sentececase_name").join(sentenceCaseName);
  await fs.writeFileSync(newModuleBaseDir + "/controllers/index.js", controllerFileData);
}

async function createModel(newModuleBaseDir, lowerCaseName, upperCaseName, urlName, sentenceCaseName) {
  await fs.mkdirSync(newModuleBaseDir + "/models");
  let modelFileData =
    "aW1wb3J0IG1vbmdvb3NlIGZyb20gIm1vbmdvb3NlIjsNCmltcG9ydCB1bmlxdWVWYWxpZGF0b3IgZnJvbSAibW9uZ29vc2UtdW5pcXVlLXZhbGlkYXRvciI7DQppbXBvcnQgc2x1ZyBmcm9tICJzbHVnIjsNCmNvbnN0IFNjaGVtYSA9IG1vbmdvb3NlLlNjaGVtYTsNCg0KLy8gY3JlYXRlIGEgc2NoZW1hDQpjb25zdCBsb3dlcmNhc2VfbmFtZVNjaGVtYSA9IG5ldyBTY2hlbWEoDQogIHsNCiAgICB0aXRsZTogew0KICAgICAgdHlwZTogU3RyaW5nDQogICAgfSwNCiAgICBzbHVnOiB7DQogICAgICB0eXBlOiBTdHJpbmcsDQogICAgICBsb3dlcmNhc2U6IHRydWUsDQogICAgICB1bmlxdWU6IHRydWUNCiAgICB9LA0KICAgIHN0YXR1czogew0KICAgICAgdHlwZTogU3RyaW5nLA0KICAgICAgZW51bTogWyJBY3RpdmUiLCAiQXJjaGl2ZWQiLCAiRGVsZXRlZCJdLA0KICAgICAgZGVmYXVsdDogIkFjdGl2ZSINCiAgICB9LA0KICAgIG1ldGFfZGF0YTogew0KICAgICAgdHlwZTogU2NoZW1hLlR5cGVzLk1peGVkDQogICAgfQ0KICB9LA0KICB7IHRpbWVzdGFtcHM6IHRydWUgfQ0KKTsNCg0KbG93ZXJjYXNlX25hbWVTY2hlbWEucGx1Z2luKHVuaXF1ZVZhbGlkYXRvciwgeyBtZXNzYWdlOiAiaXMgYWxyZWFkeSB0YWtlbiIgfSk7DQoNCmxvd2VyY2FzZV9uYW1lU2NoZW1hLnByZSgidmFsaWRhdGUiLCBmdW5jdGlvbihuZXh0KSB7DQogIHRoaXMuc2x1Z2lmeSgpOw0KICBuZXh0KCk7DQp9KTsNCg0KbG93ZXJjYXNlX25hbWVTY2hlbWEubWV0aG9kcy5zbHVnaWZ5ID0gZnVuY3Rpb24oKSB7DQogIHRoaXMuc2x1ZyA9IHNsdWcodGhpcy50aXRsZSk7DQp9Ow0KDQovLyBNaW5pbWFsIEpTT04gUmVzcG9uc2UgZm9yIFVzZXINCg0KbG93ZXJjYXNlX25hbWVTY2hlbWEubWV0aG9kcy50b0pTT05Gb3JVc2VyID0gZnVuY3Rpb24oKSB7DQogIGxldCB2YWx1ZSA9IE9iamVjdC5hc3NpZ24oe30sIHRoaXMpOw0KDQogIC8vIFJlbW92ZSBmaWVsZHMgZnJvbSByZXR1cm4gdmFsdWUgaGVyZQ0KICBkZWxldGUgdmFsdWUuX2RvYy5faWQ7DQoNCiAgcmV0dXJuIHZhbHVlOw0KfTsNCg0KLy8gQ3VzdG9tIEpTT04gRm9yIEFkbWluaXN0cmF0b3INCg0KbG93ZXJjYXNlX25hbWVTY2hlbWEubWV0aG9kcy50b0pTT05Gb3JBZG1pbmlzdHJhdG9yID0gZnVuY3Rpb24oKSB7DQogIGxldCB2YWx1ZSA9IE9iamVjdC5hc3NpZ24oe30sIHRoaXMpOw0KDQogIC8vIFJlbW92ZSBmaWVsZHMgZnJvbSByZXR1cm4gdmFsdWUgaGVyZQ0KDQogIHJldHVybiB2YWx1ZTsNCn07DQoNCi8vIHRoZSBzY2hlbWEgaXMgdXNlbGVzcyBzbyBmYXINCi8vIHdlIG5lZWQgdG8gY3JlYXRlIGEgbW9kZWwgdXNpbmcgaXQNCmNvbnN0IHVwcGVyY2FzZV9uYW1lID0gbW9uZ29vc2UubW9kZWwoInVwcGVyY2FzZV9uYW1lIiwgbG93ZXJjYXNlX25hbWVTY2hlbWEpOw0KDQovLyBtYWtlIHRoaXMgYXZhaWxhYmxlIGluIG91ciBhcHBsaWNhdGlvbnMNCmV4cG9ydCBkZWZhdWx0IHVwcGVyY2FzZV9uYW1lOw0K";
  modelFileData = new String(new Buffer(modelFileData, "base64"));
  modelFileData = modelFileData.split("lowercase_name").join(lowerCaseName);
  modelFileData = modelFileData.split("uppercase_name").join(upperCaseName);
  await fs.writeFileSync(newModuleBaseDir + "/models/index.js", modelFileData);
}

async function createRoute(newModuleBaseDir, lowerCaseName, upperCaseName, urlName, sentenceCaseName) {
  await fs.mkdirSync(newModuleBaseDir + "/routes");
  let routeFileData =
    "InVzZSBzdHJpY3QiOw0KaW1wb3J0IGV4cHJlc3MgZnJvbSAiZXhwcmVzcyI7DQppbXBvcnQgeyBnZXRBbGx1cHBlcmNhc2VfbmFtZV9wbHVyYWwsIGFkZE5ld3VwcGVyY2FzZV9uYW1lLCBnZXR1cHBlcmNhc2VfbmFtZSwgdXBkYXRldXBwZXJjYXNlX25hbWUsIGRlbGV0ZXVwcGVyY2FzZV9uYW1lIH0gZnJvbSAiLi4vY29udHJvbGxlcnMiOw0KY29uc3QgbG93ZXJjYXNlX25hbWVSb3V0ZXMgPSBleHByZXNzLlJvdXRlcigpOw0KDQpsb3dlcmNhc2VfbmFtZVJvdXRlcw0KICAucm91dGUoIi8iKQ0KICAvLyBnZXQgYWxsIHNlbnRlY2VjYXNlX25hbWVfcGx1cmFsIChhY2Nlc3NlZCBhdCBHRVQgaHR0cDovL2Jhc2UtdXJsL3VybGNhc2UpDQogIC5nZXQoZ2V0QWxsdXBwZXJjYXNlX25hbWVfcGx1cmFsKQ0KICAvLyBjcmVhdGUgYSBzZW50ZWNlY2FzZV9uYW1lIChhY2Nlc3NlZCBhdCBQT1NUIGh0dHA6Ly9iYXNlLXVybC91cmxjYXNlKQ0KICAucG9zdChhZGROZXd1cHBlcmNhc2VfbmFtZSk7DQoNCmxvd2VyY2FzZV9uYW1lUm91dGVzDQogIC5yb3V0ZSgiLzpfaWQiKQ0KICAvLyBnZXQgYSBzaW5nbGUgc2VudGVjZWNhc2VfbmFtZSAoYWNjZXNzZWQgYXQgR0VUIGh0dHA6Ly9iYXNlLXVybC91cmxjYXNlLzpfaWQpDQogIC5nZXQoZ2V0dXBwZXJjYXNlX25hbWUpDQogIC8vIHVwZGF0ZSBhIHNpbmdsZSBzZW50ZWNlY2FzZV9uYW1lIChhY2Nlc3NlZCBhdCBQVVQgaHR0cDovL2Jhc2UtdXJsL3VybGNhc2UvOl9pZCkNCiAgLnB1dCh1cGRhdGV1cHBlcmNhc2VfbmFtZSkNCiAgLy8gZGVsZXRlIGEgc2VudGVjZWNhc2VfbmFtZSAoYWNjZXNzZWQgYXQgREVMRVRFIGh0dHA6Ly9iYXNlLXVybC91cmxjYXNlLzpfaWQpDQogIC5kZWxldGUoZGVsZXRldXBwZXJjYXNlX25hbWUpOw0KDQovLyBBbmQgaGVyZSB0aGUgcGxhY2UgZm9yIGN1c3RvbSByb3V0ZSBhbmQgRW5kcG9pbnRzDQoNCmV4cG9ydCBkZWZhdWx0IGxvd2VyY2FzZV9uYW1lUm91dGVzOw0K";
  routeFileData = new String(new Buffer(routeFileData, "base64"));
  routeFileData = routeFileData.split("sentececase_name_plural").join(pluralize(sentenceCaseName));
  routeFileData = routeFileData.split("uppercase_name_plural").join(pluralize(upperCaseName));
  routeFileData = routeFileData.split("lowercase_name").join(lowerCaseName);
  routeFileData = routeFileData.split("uppercase_name").join(upperCaseName);
  routeFileData = routeFileData.split("sentececase_name").join(sentenceCaseName);
  routeFileData = routeFileData.split("urlcase").join(urlName);
  await fs.writeFileSync(newModuleBaseDir + "/routes/index.js", routeFileData);
}

async function createModule(dir, name) {
  spinner.start();
  let lowerCaseName = changeCase.camelCase(name);
  let upperCaseName = changeCase.pascalCase(name);
  let urlName = pluralize(changeCase.paramCase(name));
  let sentenceCaseName = changeCase.noCase(name);

  let newModuleBaseDir = dir + "/modules/" + urlName;
  await fs.mkdirSync(newModuleBaseDir);
  await createController(newModuleBaseDir, lowerCaseName, upperCaseName, urlName, sentenceCaseName);
  spinner.succeed("Sample Controllers created");
  await createModel(newModuleBaseDir, lowerCaseName, upperCaseName, urlName, sentenceCaseName);
  spinner.succeed("Sample Model created");
  await createRoute(newModuleBaseDir, lowerCaseName, upperCaseName, urlName, sentenceCaseName);
  spinner.succeed("Sample Routes created");
  spinner.succeed("Sample module created successfully");
}

module.exports = createModule;
